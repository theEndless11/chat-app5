{"version":3,"sources":["chat.js"],"names":["socket","io","username","users","messages","registerUser","document","getElementById","value","trim","alert","emit","style","display","sendMessage","message","timestamp","Date","toLocaleTimeString","addMessage","sendPrivateMessage","recipient","sender","receiver","user","chatbox","messageElement","createElement","classList","add","innerHTML","appendChild","scrollTop","scrollHeight","on","data","userList","privateUserList","forEach","li","textContent","option","notification","status","checkEnter","event","key"],"mappings":"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","sourcesContent":["// Initialize Socket.IO client\r\nconst socket = io('https://chat-4aad6bbyg-snehas-projects-dbda7901.vercel.app/');\r\n\r\n// Store user data and messages\r\nlet username = '';\r\nlet users = [];\r\nlet messages = [];\r\n\r\n// Register the user\r\nfunction registerUser() {\r\n    username = document.getElementById('username').value.trim();\r\n    if (username === '') {\r\n        alert('Please enter a valid username.');\r\n        return;\r\n    }\r\n\r\n    // Send registration request to the backend\r\n    socket.emit('register_user', { username });\r\n\r\n    // Show chat section\r\n    document.getElementById('register-section').style.display = 'none';\r\n    document.getElementById('chat-section').style.display = 'block';\r\n}\r\n\r\n// Send a public message\r\nfunction sendMessage() {\r\n    const message = document.getElementById('message').value.trim();\r\n    if (message !== '') {\r\n        const timestamp = new Date().toLocaleTimeString();\r\n        socket.emit('send_message', { username, message });\r\n        addMessage(username, message, timestamp);\r\n    }\r\n    document.getElementById('message').value = '';\r\n}\r\n\r\n// Send a private message\r\nfunction sendPrivateMessage() {\r\n    const recipient = document.getElementById('privateUserList').value;\r\n    const message = document.getElementById('privateMessage').value.trim();\r\n    if (message !== '' && recipient !== '') {\r\n        socket.emit('send_private_message', { sender: username, receiver: recipient, message });\r\n        addMessage(username, `(Private) ${message}`, new Date().toLocaleTimeString());\r\n    }\r\n    document.getElementById('privateMessage').value = '';\r\n}\r\n\r\n// Add message to the chat\r\nfunction addMessage(user, message, timestamp) {\r\n    const chatbox = document.getElementById('chatbox');\r\n    const messageElement = document.createElement('div');\r\n    messageElement.classList.add('message');\r\n    messageElement.innerHTML = `<strong>${user}</strong>: ${message} <span>(${timestamp})</span>`;\r\n    chatbox.appendChild(messageElement);\r\n    chatbox.scrollTop = chatbox.scrollHeight;\r\n}\r\n\r\n// Update user list\r\nsocket.on('user_list', (data) => {\r\n    users = data;\r\n    const userList = document.getElementById('userList');\r\n    const privateUserList = document.getElementById('privateUserList');\r\n    \r\n    // Update user list for public chat\r\n    userList.innerHTML = '';\r\n    data.forEach(user => {\r\n        const li = document.createElement('li');\r\n        li.textContent = user;\r\n        userList.appendChild(li);\r\n    });\r\n\r\n    // Update user list for private chat\r\n    privateUserList.innerHTML = '';\r\n    data.forEach(user => {\r\n        const option = document.createElement('option');\r\n        option.value = user;\r\n        option.textContent = user;\r\n        privateUserList.appendChild(option);\r\n    });\r\n});\r\n\r\n// Handle new public message\r\nsocket.on('new_message', (data) => {\r\n    addMessage(data.username, data.message, data.timestamp);\r\n});\r\n\r\n// Handle new private message\r\nsocket.on('new_private_message', (data) => {\r\n    addMessage(data.username, `(Private) ${data.message}`, data.timestamp);\r\n});\r\n\r\n// Handle user join notifications\r\nsocket.on('user_joined', (data) => {\r\n    const notification = document.createElement('div');\r\n    notification.classList.add('notification');\r\n    notification.textContent = `${data.username} has joined the chat.`;\r\n    document.getElementById('chatbox').appendChild(notification);\r\n    document.getElementById('chatbox').scrollTop = document.getElementById('chatbox').scrollHeight;\r\n});\r\n\r\n// Handle user status change (online/offline)\r\nsocket.on('user_status', (data) => {\r\n    if (data.status === 'offline') {\r\n        alert(`${data.username} has gone offline`);\r\n    }\r\n});\r\n\r\n// Handle Enter key for sending messages\r\nfunction checkEnter(event) {\r\n    if (event.key === 'Enter') {\r\n        sendMessage();\r\n    }\r\n}\r\n\r\n"],"file":"chat.dev.js"}